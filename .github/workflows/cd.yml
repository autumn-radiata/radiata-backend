name: CD

on:
  push:
    branches: [ "main" ]

env:
  AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
  AWS_EC2_USERNAME: ${{ secrets.AWS_EC2_USERNAME }}
  AWS_EC2_SSH_KEY: ${{ secrets.AWS_EC2_SSH_KEY }}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_modules: ${{ steps.detect.outputs.changed_modules }}

    steps:
      - uses: actions/checkout@v4

      - name: Detect changed modules
        id: detect
        run: |
          CHANGED_MODULES=$(git diff --name-only HEAD~1 HEAD | cut -d'/' -f2 | sort -u | uniq)
          if [ -z "$CHANGED_MODULES" ]; then
            echo "::set-output name=changed_modules::"
          else
            echo "Changed modules: $CHANGED_MODULES"
            echo "::set-output name=changed_modules::$CHANGED_MODULES"
          fi

  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.changed_modules != ''

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          for module in ${{ needs.detect-changes.outputs.changed_modules }}; do
            echo "Building and pushing $module..."
            docker build -t ${{ env.DOCKER_HUB_USERNAME }}/autumn-${module}-server:latest \
              --build-arg FILE_DIRECTORY=service/${module}/${module}-api -f ./Dockerfile .
            docker push ${{ env.DOCKER_HUB_USERNAME }}/autumn-${module}-server:latest
          done

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.changed_modules != ''

    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.AWS_EC2_HOST }}
          username: ${{ env.AWS_EC2_USERNAME }}
          key: ${{ env.AWS_EC2_SSH_KEY }}
          script: |
            echo ${{ env.DOCKER_HUB_TOKEN }} | docker login -u ${{ env.DOCKER_HUB_USERNAME }} --password-stdin

            for module in ${{ needs.detect-changes.outputs.changed_modules }}; do
              echo "Updating $module..."
              docker pull ${{ env.DOCKER_HUB_USERNAME }}/autumn-${module}-server:latest
              docker compose -f ./docker-compose-deploy.yml up -d --no-deps ${module}-server
            done